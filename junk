#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <chrono>
#include <sstream>

using namespace std;

class Animal
{
private:
    string name;
    string species;
    string birthday;
    string furColor;
    string sex;
    string habitat;
    int weight;
    int age;
    string id;

    inline static int numOfAnimals;
    inline static int nextAnimalId = 1;
public:
    Animal(string theName, string theSpecies, string thefurColor, int theweight, int theage)
    {
        name = theName;
        species = theSpecies;
        furColor = thefurColor;
        weight = theweight;
        age = theage;

        string abbreviation = string(1, tolower(theSpecies[0])) + string(1, tolower(theSpecies[1]));
        id = abbreviation + to_string(nextAnimalId++);

        numOfAnimals++;
    }

    string getAnimalName()
    {
        return name;
    }
    string getAnimalSpecies()
    {
        return species;
    }

    string getFurColor()
    {
        return furColor;
    }

    int getWeight()
    {
        return weight;
    }

    int getAge()
    {
        return age;
    }

    int getNumOfAnimals()
    {
        return numOfAnimals;
    }
    string getAnimalId()
    {
        return id;
    }
};

class Hyena : public Animal //super class
{
private:
    inline static int numOfHyenas;
public:
    Hyena(string theName, string theSpecies, string thefurColor, int theweight, int theage) : Animal(theName, theSpecies, thefurColor, theweight, theage)
    {
        numOfHyenas++;
    }
    int getNumOfHyenas()
    {
        return numOfHyenas;
    }
};

class Lion : public Animal //super class
{
private:
    inline static int numOfLions;
public:
    Lion(string theName, string theSpecies, string thefurColor, int theweight, int theage) : Animal(theName, theSpecies, thefurColor, theweight, theage)
    {
        numOfLions++;
    }
    int getNumOfLions()
    {
        return numOfLions;
    }
};

class Bear : public Animal //super class
{
private:
    inline static int numOfBears;
public:
    Bear(string theName, string theSpecies, string thefurColor, int theweight, int theage) : Animal(theName, theSpecies, thefurColor, theweight, theage)
    {
        numOfBears++;
    }
    int getNumOfBears()
    {
        return numOfBears;
    }
};

class Tiger : public Animal //super class
{
private:
    inline static int numOfTigers;
public:
    Tiger(string theName, string theSpecies, string thefurColor, int theweight, int theage) : Animal(theName, theSpecies, thefurColor, theweight, theage)
    {
        numOfTigers++;
    }
    int getNumOfTigers()
    {
        return numOfTigers;
    }
};

// Function to calculate the birthdate for a 4-year-old hyena born in the spring
string calculateHyenaBirthdate(string description, string birthSeason) {

    // Parse the birth season and create a date for March 21 of the current year
    chrono::system_clock::time_point today = chrono::system_clock::now();
    time_t now_c = chrono::system_clock::to_time_t(today);
    tm now_tm = *localtime(&now_c);

    int birthMonth = 3;  // March
    int birthDay = 21;

    // Check if the description contains the word "female" to determine the gender
    bool isFemale = (description.find("female") != string::npos);

    // Calculate the birth year based on the age (4 years old)
    int birthYear = now_tm.tm_year + 1900 - 4;

    // Create a string to represent the birthdate
    ostringstream oss;
    oss << "The " << (isFemale ? "female " : "") << "hyena born in " << birthSeason << " has a birthdate of "
        << birthMonth << "/" << birthDay << "/" << birthYear;

    return oss.str();
}

int main()
{
    //SuperClass VariableName = SuperClass("name", "species", "furcolor", weight, age)
    //Animal myAnimal02 = Animal("Happy", "Hyena");
    //Animal myAnimal03 = Animal("Ed", "Hyena");

    //Hyena myHyena01 = Hyena("Kamari", "Hyena"); //set weight for hyena
   // Hyena myHyena02 = Hyena("Madoa", "Hyena");

    //Lion myLion01 = Lion("Mufasa", "Lion");
    //Lion myLion02 = Lion("Simba", "Lion");

    //Tiger myTiger01 = Tiger("Tony", "Tiger");
    //Tiger myTiger02 = Tiger("Tigger", "Tiger");

   // Bear myBear01 = Bear("Yogi", "Bear");
   // Bear myBear02 = Bear("Smokey", "Bear");
   // Bear myBear03 = Bear("Paddlington", "Bear");

    //cout << "The Hyena's name is: " << myHyena01.getAnimalName() << "\n\n";

    //cout << "\n Number of Animals: " << myAnimal02.getNumOfAnimals() << "\n\n";

   // cout << "\n Number of Hyenas: " << myHyena01.getNumOfHyenas() << "\n\n";

   // cout << "\n Number of Lions: " << myLion01.getNumOfLions() << "\n\n";

    //cout << "\n Number of Tigers: " << myTiger01.getNumOfTigers() << "\n\n";

   // cout << "\n Number of Bears: " << myBear01.getNumOfBears() << "\n\n";

   // cout << "Animal ID: " << myLion02.getAnimalId() << endl;
   
   string animal01 = "4 year old female hyena, born in spring, tan color, 70 pounds, from Friguia Park Tunisia 12 year old male hyena, born in fall, brown color, 150 pounds, from Friguia Park, Tunisia"

    cout << "\n Name: " << myAnimal01.getAnimalName() << endl;
    cout << "\n Age: " << myAnimal01.getAge() << endl;
    cout << "\n FurColor: " << myAnimal01.getFurColor() << endl;
    cout << "\n ID: " << myAnimal01.getAnimalId() << endl;
    cout << "\n Species: " << myAnimal01.getAnimalSpecies() << endl;
    cout << "\n Weight: " << myAnimal01.getWeight() << endl;

    string description = "4 year old female hyena";
    string birthSeason = "born in spring";
    string 

    string birthdate = calculateHyenaBirthdate(description, birthSeason);
    cout << "4 year old hyena's birthdate is: " << birthdate << endl;

    return 0;
}
